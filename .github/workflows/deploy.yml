name: Deploy to Vercel

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  NODE_VERSION: '22'
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: |
          package.json
          website/backend/package.json
        
    - name: Install root dependencies
      run: npm ci
        
    - name: Install backend dependencies
      run: |
        cd website/backend
        npm install
        
    - name: Lint backend code
      run: |
        cd website/backend
        npm run lint --if-present
        
    - name: Run backend tests
      run: |
        cd website/backend
        npm test --if-present
        
    - name: Validate environment files
      run: |
        if [ ! -f ".env.example" ]; then
          echo "Warning: .env.example file not found"
        fi
        echo "Environment validation completed"

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Deploy to Vercel (Preview)
      if: github.event_name == 'pull_request'
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ env.VERCEL_ORG_ID }}
        vercel-project-id: ${{ env.VERCEL_PROJECT_ID }}
        working-directory: ./
        
    - name: Deploy to Vercel (Production)
      if: github.ref == 'refs/heads/main'
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ env.VERCEL_ORG_ID }}
        vercel-project-id: ${{ env.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        working-directory: ./
        
    - name: Deployment Status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "‚úÖ Deployment completed successfully!"
          echo "üöÄ Application URL: https://iot-management.vercel.app"
        else
          echo "‚ùå Deployment failed. Check the logs above."
        fi
